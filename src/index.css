@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* FullPilot Futuristic Dark Theme */
    --background: 230 35% 7%;
    --foreground: 180 100% 90%;

    --card: 230 30% 10%;
    --card-foreground: 180 100% 95%;

    --popover: 230 35% 8%;
    --popover-foreground: 180 100% 95%;

    --primary: 186 100% 50%;
    --primary-foreground: 230 35% 7%;

    --secondary: 270 100% 70%;
    --secondary-foreground: 230 35% 7%;

    --muted: 230 20% 15%;
    --muted-foreground: 180 30% 60%;

    --accent: 186 100% 50%;
    --accent-foreground: 230 35% 7%;

    --destructive: 0 85% 60%;
    --destructive-foreground: 180 100% 95%;

    --border: 230 25% 18%;
    --input: 230 25% 15%;
    --ring: 186 100% 50%;

    --radius: 0.75rem;

    /* Glass effect variables */
    --glass-bg: 230 30% 12%;
    --glass-border: 186 100% 50%;
    --glow: 186 100% 50%;
    --glow-secondary: 270 100% 70%;

    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(186 100% 50% / 0.2), hsl(270 100% 70% / 0.2));
    --gradient-glow: linear-gradient(135deg, hsl(186 100% 50% / 0.3), hsl(270 100% 70% / 0.3));
    
    /* Animations */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground antialiased;
    background-image: 
      radial-gradient(circle at 20% 30%, hsl(186 100% 50% / 0.05) 0%, transparent 50%),
      radial-gradient(circle at 80% 70%, hsl(270 100% 70% / 0.05) 0%, transparent 50%);
  }

  /* Glass morphism effect */
  .glass {
    background: hsl(var(--glass-bg) / 0.6);
    backdrop-filter: blur(12px);
    border: 1px solid hsl(var(--glass-border) / 0.2);
  }

  .glass-card {
    @apply glass rounded-2xl shadow-2xl;
    transition: var(--transition-smooth);
  }

  .glass-card:hover {
    border-color: hsl(var(--glass-border) / 0.4);
    box-shadow: 0 0 30px hsl(var(--glow) / 0.2);
  }

  /* Animated border effect */
  .animated-border {
    position: relative;
    background: hsl(var(--card));
    border-radius: var(--radius);
  }

  .animated-border::before {
    content: '';
    position: absolute;
    inset: -2px;
    border-radius: var(--radius);
    padding: 2px;
    background: linear-gradient(135deg, hsl(var(--glow)), hsl(var(--glow-secondary)));
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .animated-border:hover::before {
    opacity: 1;
  }

  /* Pulse animation */
  @keyframes pulse-glow {
    0%, 100% {
      box-shadow: 0 0 20px hsl(var(--glow) / 0.3);
    }
    50% {
      box-shadow: 0 0 40px hsl(var(--glow) / 0.5);
    }
  }

  .pulse-glow {
    animation: pulse-glow 2s ease-in-out infinite;
  }

  /* Gradient text */
  .gradient-text {
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--secondary)));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
}
