-- Pack 23: Technical Documentation (10 detailed prompts)
INSERT INTO prompt_pack_items (pack_id, title, prompt_text, order_index)
SELECT id, 'API Documentation Standards', 'Create comprehensive API documentation using OpenAPI/Swagger specifications. Include endpoint descriptions, request/response schemas, authentication methods, error codes, rate limits, and code examples in multiple languages. Implement interactive documentation, try-it-out functionality, and versioning. Address deprecation notices, migration guides, and changelog. Provide documentation generation from code, style guides, and maintenance procedures using API documentation best practises and Australian technical writing standards.', 0 FROM prompt_packs WHERE name = 'Technical Documentation'
UNION ALL
SELECT id, 'Architecture Decision Records', 'Implement Architecture Decision Records (ADRs) to document significant architectural decisions. Include decision context, options considered, decision rationale, consequences, and status. Design ADR template, storage location, review process, and discoverability. Address decision reversal, updates to decisions, and stakeholder communication. Provide ADR examples, numbering system, and governance process using lightweight architectural documentation practises and Australian software architecture standards.', 1 FROM prompt_packs WHERE name = 'Technical Documentation'
UNION ALL
SELECT id, 'Code Documentation Guidelines', 'Establish code documentation standards for maintainability. Include inline comments, function/method documentation, class documentation, and module-level documentation. Implement JSDoc, JavaDoc, or similar tools, documentation generation, and examples. Address when to comment, self-documenting code practises, and avoiding redundant documentation. Provide documentation templates, review checklists, and tooling recommendations using clean code principles and Australian software development standards.', 2 FROM prompt_packs WHERE name = 'Technical Documentation'
UNION ALL
SELECT id, 'User Documentation Portal', 'Design a user documentation portal for end-user guides and tutorials. Include getting started guides, feature documentation, video tutorials, FAQs, and troubleshooting sections. Implement search functionality, feedback mechanisms, versioning, and analytics. Address content organisation, navigation structure, and accessibility. Provide content management system setup, authoring guidelines, and maintenance workflows using documentation as code approaches and Australian content delivery standards.', 3 FROM prompt_packs WHERE name = 'Technical Documentation'
UNION ALL
SELECT id, 'System Runbook Creation', 'Create operational runbooks for system maintenance and incident response. Include system architecture overview, deployment procedures, monitoring and alerting, troubleshooting guides, and disaster recovery steps. Design runbook template, access instructions, escalation paths, and contact information. Address runbook testing, updates during incidents, and continuous improvement. Provide runbook examples, automation opportunities, and knowledge transfer procedures using site reliability engineering practises and Australian operational documentation standards.', 4 FROM prompt_packs WHERE name = 'Technical Documentation'
UNION ALL
SELECT id, 'Database Schema Documentation', 'Document database schema comprehensively for developers and analysts. Include entity-relationship diagrams, table descriptions, column specifications, constraints, indexes, and relationships. Implement data dictionary, sample queries, and data lineage. Address schema versioning, migration history, and performance considerations. Provide documentation generation tools, update procedures, and data governance integration using database documentation best practises and Australian data management standards.', 5 FROM prompt_packs WHERE name = 'Technical Documentation'
UNION ALL
SELECT id, 'Release Notes & Changelog', 'Create effective release notes and changelog for version tracking. Include feature additions, bug fixes, breaking changes, deprecations, and migration instructions. Design release note template, categorisation system, and audience targeting (developers, end-users, admins). Address semantic versioning, release frequency, and communication channels. Provide automation for changelog generation, review process, and distribution strategy using software release communication practises and Australian change management standards.', 6 FROM prompt_packs WHERE name = 'Technical Documentation'
UNION ALL
SELECT id, 'Technical Specification Documents', 'Write technical specification documents for feature development. Include requirements overview, technical approach, system design, data models, API specifications, security considerations, and testing strategy. Design spec template, review process, and approval workflow. Address traceability to requirements, updates during development, and retrospective validation. Provide specification examples, diagramming standards, and version control using software engineering documentation practises and Australian project documentation standards.', 7 FROM prompt_packs WHERE name = 'Technical Documentation'
UNION ALL
SELECT id, 'README Best Practises', 'Create effective README files for code repositories. Include project description, prerequisites, installation instructions, usage examples, configuration options, contributing guidelines, and licence information. Design README structure, badges for build status and coverage, and quick start sections. Address documentation for different audiences, screenshot/GIF inclusion, and maintenance. Provide README templates, linting tools, and continuous improvement using open-source documentation standards and Australian software collaboration practises.', 8 FROM prompt_packs WHERE name = 'Technical Documentation'
UNION ALL
SELECT id, 'Knowledge Base Management', 'Implement a technical knowledge base for team knowledge sharing. Include architecture documentation, coding standards, troubleshooting guides, design patterns, and lessons learnt. Design knowledge base structure, search and discovery, tagging system, and contribution process. Address content ownership, review cycles, archival of outdated content, and metrics. Provide knowledge base platform selection, migration from wikis, and continuous improvement using knowledge management principles and Australian organisational learning standards.', 9 FROM prompt_packs WHERE name = 'Technical Documentation';